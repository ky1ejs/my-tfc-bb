//
// DO NOT EDIT.
//
// Generated by the protocol buffer compiler.
// Source: my_tfc_bb/v1/my_tfc_bb.proto
//

//
// Copyright 2018, gRPC Authors All rights reserved.
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.
//
import GRPC
import NIO
import NIOConcurrencyHelpers
import SwiftProtobuf


/// Usage: instantiate `MyTfcBb_V1_MyTfcServiceClient`, then call methods of this protocol to make API calls.
internal protocol MyTfcBb_V1_MyTfcServiceClientProtocol: GRPCClient {
  var serviceName: String { get }
  var interceptors: MyTfcBb_V1_MyTfcServiceClientInterceptorFactoryProtocol? { get }

  func logIn(
    _ request: MyTfcBb_V1_LogInRequest,
    callOptions: CallOptions?
  ) -> UnaryCall<MyTfcBb_V1_LogInRequest, MyTfcBb_V1_LogInResponse>

  func getDeliveries(
    _ request: MyTfcBb_V1_GetDeliveriesRequest,
    callOptions: CallOptions?
  ) -> UnaryCall<MyTfcBb_V1_GetDeliveriesRequest, MyTfcBb_V1_GetDeliveriesResponse>

  func updatePushToken(
    _ request: MyTfcBb_V1_UpdatePushTokenRequest,
    callOptions: CallOptions?
  ) -> UnaryCall<MyTfcBb_V1_UpdatePushTokenRequest, SwiftProtobuf.Google_Protobuf_Empty>

  func sendTestPushNotication(
    _ request: SwiftProtobuf.Google_Protobuf_Empty,
    callOptions: CallOptions?
  ) -> UnaryCall<SwiftProtobuf.Google_Protobuf_Empty, SwiftProtobuf.Google_Protobuf_Empty>

  func logOut(
    _ request: SwiftProtobuf.Google_Protobuf_Empty,
    callOptions: CallOptions?
  ) -> UnaryCall<SwiftProtobuf.Google_Protobuf_Empty, SwiftProtobuf.Google_Protobuf_Empty>
}

extension MyTfcBb_V1_MyTfcServiceClientProtocol {
  internal var serviceName: String {
    return "my_tfc_bb.v1.MyTfcService"
  }

  /// Unary call to LogIn
  ///
  /// - Parameters:
  ///   - request: Request to send to LogIn.
  ///   - callOptions: Call options.
  /// - Returns: A `UnaryCall` with futures for the metadata, status and response.
  internal func logIn(
    _ request: MyTfcBb_V1_LogInRequest,
    callOptions: CallOptions? = nil
  ) -> UnaryCall<MyTfcBb_V1_LogInRequest, MyTfcBb_V1_LogInResponse> {
    return self.makeUnaryCall(
      path: MyTfcBb_V1_MyTfcServiceClientMetadata.Methods.logIn.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeLogInInterceptors() ?? []
    )
  }

  /// Unary call to GetDeliveries
  ///
  /// - Parameters:
  ///   - request: Request to send to GetDeliveries.
  ///   - callOptions: Call options.
  /// - Returns: A `UnaryCall` with futures for the metadata, status and response.
  internal func getDeliveries(
    _ request: MyTfcBb_V1_GetDeliveriesRequest,
    callOptions: CallOptions? = nil
  ) -> UnaryCall<MyTfcBb_V1_GetDeliveriesRequest, MyTfcBb_V1_GetDeliveriesResponse> {
    return self.makeUnaryCall(
      path: MyTfcBb_V1_MyTfcServiceClientMetadata.Methods.getDeliveries.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeGetDeliveriesInterceptors() ?? []
    )
  }

  /// Unary call to UpdatePushToken
  ///
  /// - Parameters:
  ///   - request: Request to send to UpdatePushToken.
  ///   - callOptions: Call options.
  /// - Returns: A `UnaryCall` with futures for the metadata, status and response.
  internal func updatePushToken(
    _ request: MyTfcBb_V1_UpdatePushTokenRequest,
    callOptions: CallOptions? = nil
  ) -> UnaryCall<MyTfcBb_V1_UpdatePushTokenRequest, SwiftProtobuf.Google_Protobuf_Empty> {
    return self.makeUnaryCall(
      path: MyTfcBb_V1_MyTfcServiceClientMetadata.Methods.updatePushToken.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeUpdatePushTokenInterceptors() ?? []
    )
  }

  /// Unary call to SendTestPushNotication
  ///
  /// - Parameters:
  ///   - request: Request to send to SendTestPushNotication.
  ///   - callOptions: Call options.
  /// - Returns: A `UnaryCall` with futures for the metadata, status and response.
  internal func sendTestPushNotication(
    _ request: SwiftProtobuf.Google_Protobuf_Empty,
    callOptions: CallOptions? = nil
  ) -> UnaryCall<SwiftProtobuf.Google_Protobuf_Empty, SwiftProtobuf.Google_Protobuf_Empty> {
    return self.makeUnaryCall(
      path: MyTfcBb_V1_MyTfcServiceClientMetadata.Methods.sendTestPushNotication.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeSendTestPushNoticationInterceptors() ?? []
    )
  }

  /// Unary call to LogOut
  ///
  /// - Parameters:
  ///   - request: Request to send to LogOut.
  ///   - callOptions: Call options.
  /// - Returns: A `UnaryCall` with futures for the metadata, status and response.
  internal func logOut(
    _ request: SwiftProtobuf.Google_Protobuf_Empty,
    callOptions: CallOptions? = nil
  ) -> UnaryCall<SwiftProtobuf.Google_Protobuf_Empty, SwiftProtobuf.Google_Protobuf_Empty> {
    return self.makeUnaryCall(
      path: MyTfcBb_V1_MyTfcServiceClientMetadata.Methods.logOut.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeLogOutInterceptors() ?? []
    )
  }
}

#if compiler(>=5.6)
@available(*, deprecated)
extension MyTfcBb_V1_MyTfcServiceClient: @unchecked Sendable {}
#endif // compiler(>=5.6)

@available(*, deprecated, renamed: "MyTfcBb_V1_MyTfcServiceNIOClient")
internal final class MyTfcBb_V1_MyTfcServiceClient: MyTfcBb_V1_MyTfcServiceClientProtocol {
  private let lock = Lock()
  private var _defaultCallOptions: CallOptions
  private var _interceptors: MyTfcBb_V1_MyTfcServiceClientInterceptorFactoryProtocol?
  internal let channel: GRPCChannel
  internal var defaultCallOptions: CallOptions {
    get { self.lock.withLock { return self._defaultCallOptions } }
    set { self.lock.withLockVoid { self._defaultCallOptions = newValue } }
  }
  internal var interceptors: MyTfcBb_V1_MyTfcServiceClientInterceptorFactoryProtocol? {
    get { self.lock.withLock { return self._interceptors } }
    set { self.lock.withLockVoid { self._interceptors = newValue } }
  }

  /// Creates a client for the my_tfc_bb.v1.MyTfcService service.
  ///
  /// - Parameters:
  ///   - channel: `GRPCChannel` to the service host.
  ///   - defaultCallOptions: Options to use for each service call if the user doesn't provide them.
  ///   - interceptors: A factory providing interceptors for each RPC.
  internal init(
    channel: GRPCChannel,
    defaultCallOptions: CallOptions = CallOptions(),
    interceptors: MyTfcBb_V1_MyTfcServiceClientInterceptorFactoryProtocol? = nil
  ) {
    self.channel = channel
    self._defaultCallOptions = defaultCallOptions
    self._interceptors = interceptors
  }
}

internal struct MyTfcBb_V1_MyTfcServiceNIOClient: MyTfcBb_V1_MyTfcServiceClientProtocol {
  internal var channel: GRPCChannel
  internal var defaultCallOptions: CallOptions
  internal var interceptors: MyTfcBb_V1_MyTfcServiceClientInterceptorFactoryProtocol?

  /// Creates a client for the my_tfc_bb.v1.MyTfcService service.
  ///
  /// - Parameters:
  ///   - channel: `GRPCChannel` to the service host.
  ///   - defaultCallOptions: Options to use for each service call if the user doesn't provide them.
  ///   - interceptors: A factory providing interceptors for each RPC.
  internal init(
    channel: GRPCChannel,
    defaultCallOptions: CallOptions = CallOptions(),
    interceptors: MyTfcBb_V1_MyTfcServiceClientInterceptorFactoryProtocol? = nil
  ) {
    self.channel = channel
    self.defaultCallOptions = defaultCallOptions
    self.interceptors = interceptors
  }
}

#if compiler(>=5.6)
@available(macOS 10.15, iOS 13, tvOS 13, watchOS 6, *)
internal protocol MyTfcBb_V1_MyTfcServiceAsyncClientProtocol: GRPCClient {
  static var serviceDescriptor: GRPCServiceDescriptor { get }
  var interceptors: MyTfcBb_V1_MyTfcServiceClientInterceptorFactoryProtocol? { get }

  func makeLogInCall(
    _ request: MyTfcBb_V1_LogInRequest,
    callOptions: CallOptions?
  ) -> GRPCAsyncUnaryCall<MyTfcBb_V1_LogInRequest, MyTfcBb_V1_LogInResponse>

  func makeGetDeliveriesCall(
    _ request: MyTfcBb_V1_GetDeliveriesRequest,
    callOptions: CallOptions?
  ) -> GRPCAsyncUnaryCall<MyTfcBb_V1_GetDeliveriesRequest, MyTfcBb_V1_GetDeliveriesResponse>

  func makeUpdatePushTokenCall(
    _ request: MyTfcBb_V1_UpdatePushTokenRequest,
    callOptions: CallOptions?
  ) -> GRPCAsyncUnaryCall<MyTfcBb_V1_UpdatePushTokenRequest, SwiftProtobuf.Google_Protobuf_Empty>

  func makeSendTestPushNoticationCall(
    _ request: SwiftProtobuf.Google_Protobuf_Empty,
    callOptions: CallOptions?
  ) -> GRPCAsyncUnaryCall<SwiftProtobuf.Google_Protobuf_Empty, SwiftProtobuf.Google_Protobuf_Empty>

  func makeLogOutCall(
    _ request: SwiftProtobuf.Google_Protobuf_Empty,
    callOptions: CallOptions?
  ) -> GRPCAsyncUnaryCall<SwiftProtobuf.Google_Protobuf_Empty, SwiftProtobuf.Google_Protobuf_Empty>
}

@available(macOS 10.15, iOS 13, tvOS 13, watchOS 6, *)
extension MyTfcBb_V1_MyTfcServiceAsyncClientProtocol {
  internal static var serviceDescriptor: GRPCServiceDescriptor {
    return MyTfcBb_V1_MyTfcServiceClientMetadata.serviceDescriptor
  }

  internal var interceptors: MyTfcBb_V1_MyTfcServiceClientInterceptorFactoryProtocol? {
    return nil
  }

  internal func makeLogInCall(
    _ request: MyTfcBb_V1_LogInRequest,
    callOptions: CallOptions? = nil
  ) -> GRPCAsyncUnaryCall<MyTfcBb_V1_LogInRequest, MyTfcBb_V1_LogInResponse> {
    return self.makeAsyncUnaryCall(
      path: MyTfcBb_V1_MyTfcServiceClientMetadata.Methods.logIn.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeLogInInterceptors() ?? []
    )
  }

  internal func makeGetDeliveriesCall(
    _ request: MyTfcBb_V1_GetDeliveriesRequest,
    callOptions: CallOptions? = nil
  ) -> GRPCAsyncUnaryCall<MyTfcBb_V1_GetDeliveriesRequest, MyTfcBb_V1_GetDeliveriesResponse> {
    return self.makeAsyncUnaryCall(
      path: MyTfcBb_V1_MyTfcServiceClientMetadata.Methods.getDeliveries.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeGetDeliveriesInterceptors() ?? []
    )
  }

  internal func makeUpdatePushTokenCall(
    _ request: MyTfcBb_V1_UpdatePushTokenRequest,
    callOptions: CallOptions? = nil
  ) -> GRPCAsyncUnaryCall<MyTfcBb_V1_UpdatePushTokenRequest, SwiftProtobuf.Google_Protobuf_Empty> {
    return self.makeAsyncUnaryCall(
      path: MyTfcBb_V1_MyTfcServiceClientMetadata.Methods.updatePushToken.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeUpdatePushTokenInterceptors() ?? []
    )
  }

  internal func makeSendTestPushNoticationCall(
    _ request: SwiftProtobuf.Google_Protobuf_Empty,
    callOptions: CallOptions? = nil
  ) -> GRPCAsyncUnaryCall<SwiftProtobuf.Google_Protobuf_Empty, SwiftProtobuf.Google_Protobuf_Empty> {
    return self.makeAsyncUnaryCall(
      path: MyTfcBb_V1_MyTfcServiceClientMetadata.Methods.sendTestPushNotication.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeSendTestPushNoticationInterceptors() ?? []
    )
  }

  internal func makeLogOutCall(
    _ request: SwiftProtobuf.Google_Protobuf_Empty,
    callOptions: CallOptions? = nil
  ) -> GRPCAsyncUnaryCall<SwiftProtobuf.Google_Protobuf_Empty, SwiftProtobuf.Google_Protobuf_Empty> {
    return self.makeAsyncUnaryCall(
      path: MyTfcBb_V1_MyTfcServiceClientMetadata.Methods.logOut.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeLogOutInterceptors() ?? []
    )
  }
}

@available(macOS 10.15, iOS 13, tvOS 13, watchOS 6, *)
extension MyTfcBb_V1_MyTfcServiceAsyncClientProtocol {
  internal func logIn(
    _ request: MyTfcBb_V1_LogInRequest,
    callOptions: CallOptions? = nil
  ) async throws -> MyTfcBb_V1_LogInResponse {
    return try await self.performAsyncUnaryCall(
      path: MyTfcBb_V1_MyTfcServiceClientMetadata.Methods.logIn.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeLogInInterceptors() ?? []
    )
  }

  internal func getDeliveries(
    _ request: MyTfcBb_V1_GetDeliveriesRequest,
    callOptions: CallOptions? = nil
  ) async throws -> MyTfcBb_V1_GetDeliveriesResponse {
    return try await self.performAsyncUnaryCall(
      path: MyTfcBb_V1_MyTfcServiceClientMetadata.Methods.getDeliveries.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeGetDeliveriesInterceptors() ?? []
    )
  }

  internal func updatePushToken(
    _ request: MyTfcBb_V1_UpdatePushTokenRequest,
    callOptions: CallOptions? = nil
  ) async throws -> SwiftProtobuf.Google_Protobuf_Empty {
    return try await self.performAsyncUnaryCall(
      path: MyTfcBb_V1_MyTfcServiceClientMetadata.Methods.updatePushToken.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeUpdatePushTokenInterceptors() ?? []
    )
  }

  internal func sendTestPushNotication(
    _ request: SwiftProtobuf.Google_Protobuf_Empty,
    callOptions: CallOptions? = nil
  ) async throws -> SwiftProtobuf.Google_Protobuf_Empty {
    return try await self.performAsyncUnaryCall(
      path: MyTfcBb_V1_MyTfcServiceClientMetadata.Methods.sendTestPushNotication.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeSendTestPushNoticationInterceptors() ?? []
    )
  }

  internal func logOut(
    _ request: SwiftProtobuf.Google_Protobuf_Empty,
    callOptions: CallOptions? = nil
  ) async throws -> SwiftProtobuf.Google_Protobuf_Empty {
    return try await self.performAsyncUnaryCall(
      path: MyTfcBb_V1_MyTfcServiceClientMetadata.Methods.logOut.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeLogOutInterceptors() ?? []
    )
  }
}

@available(macOS 10.15, iOS 13, tvOS 13, watchOS 6, *)
internal struct MyTfcBb_V1_MyTfcServiceAsyncClient: MyTfcBb_V1_MyTfcServiceAsyncClientProtocol {
  internal var channel: GRPCChannel
  internal var defaultCallOptions: CallOptions
  internal var interceptors: MyTfcBb_V1_MyTfcServiceClientInterceptorFactoryProtocol?

  internal init(
    channel: GRPCChannel,
    defaultCallOptions: CallOptions = CallOptions(),
    interceptors: MyTfcBb_V1_MyTfcServiceClientInterceptorFactoryProtocol? = nil
  ) {
    self.channel = channel
    self.defaultCallOptions = defaultCallOptions
    self.interceptors = interceptors
  }
}

#endif // compiler(>=5.6)

internal protocol MyTfcBb_V1_MyTfcServiceClientInterceptorFactoryProtocol: GRPCSendable {

  /// - Returns: Interceptors to use when invoking 'logIn'.
  func makeLogInInterceptors() -> [ClientInterceptor<MyTfcBb_V1_LogInRequest, MyTfcBb_V1_LogInResponse>]

  /// - Returns: Interceptors to use when invoking 'getDeliveries'.
  func makeGetDeliveriesInterceptors() -> [ClientInterceptor<MyTfcBb_V1_GetDeliveriesRequest, MyTfcBb_V1_GetDeliveriesResponse>]

  /// - Returns: Interceptors to use when invoking 'updatePushToken'.
  func makeUpdatePushTokenInterceptors() -> [ClientInterceptor<MyTfcBb_V1_UpdatePushTokenRequest, SwiftProtobuf.Google_Protobuf_Empty>]

  /// - Returns: Interceptors to use when invoking 'sendTestPushNotication'.
  func makeSendTestPushNoticationInterceptors() -> [ClientInterceptor<SwiftProtobuf.Google_Protobuf_Empty, SwiftProtobuf.Google_Protobuf_Empty>]

  /// - Returns: Interceptors to use when invoking 'logOut'.
  func makeLogOutInterceptors() -> [ClientInterceptor<SwiftProtobuf.Google_Protobuf_Empty, SwiftProtobuf.Google_Protobuf_Empty>]
}

internal enum MyTfcBb_V1_MyTfcServiceClientMetadata {
  internal static let serviceDescriptor = GRPCServiceDescriptor(
    name: "MyTfcService",
    fullName: "my_tfc_bb.v1.MyTfcService",
    methods: [
      MyTfcBb_V1_MyTfcServiceClientMetadata.Methods.logIn,
      MyTfcBb_V1_MyTfcServiceClientMetadata.Methods.getDeliveries,
      MyTfcBb_V1_MyTfcServiceClientMetadata.Methods.updatePushToken,
      MyTfcBb_V1_MyTfcServiceClientMetadata.Methods.sendTestPushNotication,
      MyTfcBb_V1_MyTfcServiceClientMetadata.Methods.logOut,
    ]
  )

  internal enum Methods {
    internal static let logIn = GRPCMethodDescriptor(
      name: "LogIn",
      path: "/my_tfc_bb.v1.MyTfcService/LogIn",
      type: GRPCCallType.unary
    )

    internal static let getDeliveries = GRPCMethodDescriptor(
      name: "GetDeliveries",
      path: "/my_tfc_bb.v1.MyTfcService/GetDeliveries",
      type: GRPCCallType.unary
    )

    internal static let updatePushToken = GRPCMethodDescriptor(
      name: "UpdatePushToken",
      path: "/my_tfc_bb.v1.MyTfcService/UpdatePushToken",
      type: GRPCCallType.unary
    )

    internal static let sendTestPushNotication = GRPCMethodDescriptor(
      name: "SendTestPushNotication",
      path: "/my_tfc_bb.v1.MyTfcService/SendTestPushNotication",
      type: GRPCCallType.unary
    )

    internal static let logOut = GRPCMethodDescriptor(
      name: "LogOut",
      path: "/my_tfc_bb.v1.MyTfcService/LogOut",
      type: GRPCCallType.unary
    )
  }
}

/// To build a server, implement a class that conforms to this protocol.
internal protocol MyTfcBb_V1_MyTfcServiceProvider: CallHandlerProvider {
  var interceptors: MyTfcBb_V1_MyTfcServiceServerInterceptorFactoryProtocol? { get }

  func logIn(request: MyTfcBb_V1_LogInRequest, context: StatusOnlyCallContext) -> EventLoopFuture<MyTfcBb_V1_LogInResponse>

  func getDeliveries(request: MyTfcBb_V1_GetDeliveriesRequest, context: StatusOnlyCallContext) -> EventLoopFuture<MyTfcBb_V1_GetDeliveriesResponse>

  func updatePushToken(request: MyTfcBb_V1_UpdatePushTokenRequest, context: StatusOnlyCallContext) -> EventLoopFuture<SwiftProtobuf.Google_Protobuf_Empty>

  func sendTestPushNotication(request: SwiftProtobuf.Google_Protobuf_Empty, context: StatusOnlyCallContext) -> EventLoopFuture<SwiftProtobuf.Google_Protobuf_Empty>

  func logOut(request: SwiftProtobuf.Google_Protobuf_Empty, context: StatusOnlyCallContext) -> EventLoopFuture<SwiftProtobuf.Google_Protobuf_Empty>
}

extension MyTfcBb_V1_MyTfcServiceProvider {
  internal var serviceName: Substring {
    return MyTfcBb_V1_MyTfcServiceServerMetadata.serviceDescriptor.fullName[...]
  }

  /// Determines, calls and returns the appropriate request handler, depending on the request's method.
  /// Returns nil for methods not handled by this service.
  internal func handle(
    method name: Substring,
    context: CallHandlerContext
  ) -> GRPCServerHandlerProtocol? {
    switch name {
    case "LogIn":
      return UnaryServerHandler(
        context: context,
        requestDeserializer: ProtobufDeserializer<MyTfcBb_V1_LogInRequest>(),
        responseSerializer: ProtobufSerializer<MyTfcBb_V1_LogInResponse>(),
        interceptors: self.interceptors?.makeLogInInterceptors() ?? [],
        userFunction: self.logIn(request:context:)
      )

    case "GetDeliveries":
      return UnaryServerHandler(
        context: context,
        requestDeserializer: ProtobufDeserializer<MyTfcBb_V1_GetDeliveriesRequest>(),
        responseSerializer: ProtobufSerializer<MyTfcBb_V1_GetDeliveriesResponse>(),
        interceptors: self.interceptors?.makeGetDeliveriesInterceptors() ?? [],
        userFunction: self.getDeliveries(request:context:)
      )

    case "UpdatePushToken":
      return UnaryServerHandler(
        context: context,
        requestDeserializer: ProtobufDeserializer<MyTfcBb_V1_UpdatePushTokenRequest>(),
        responseSerializer: ProtobufSerializer<SwiftProtobuf.Google_Protobuf_Empty>(),
        interceptors: self.interceptors?.makeUpdatePushTokenInterceptors() ?? [],
        userFunction: self.updatePushToken(request:context:)
      )

    case "SendTestPushNotication":
      return UnaryServerHandler(
        context: context,
        requestDeserializer: ProtobufDeserializer<SwiftProtobuf.Google_Protobuf_Empty>(),
        responseSerializer: ProtobufSerializer<SwiftProtobuf.Google_Protobuf_Empty>(),
        interceptors: self.interceptors?.makeSendTestPushNoticationInterceptors() ?? [],
        userFunction: self.sendTestPushNotication(request:context:)
      )

    case "LogOut":
      return UnaryServerHandler(
        context: context,
        requestDeserializer: ProtobufDeserializer<SwiftProtobuf.Google_Protobuf_Empty>(),
        responseSerializer: ProtobufSerializer<SwiftProtobuf.Google_Protobuf_Empty>(),
        interceptors: self.interceptors?.makeLogOutInterceptors() ?? [],
        userFunction: self.logOut(request:context:)
      )

    default:
      return nil
    }
  }
}

#if compiler(>=5.6)

/// To implement a server, implement an object which conforms to this protocol.
@available(macOS 10.15, iOS 13, tvOS 13, watchOS 6, *)
internal protocol MyTfcBb_V1_MyTfcServiceAsyncProvider: CallHandlerProvider {
  static var serviceDescriptor: GRPCServiceDescriptor { get }
  var interceptors: MyTfcBb_V1_MyTfcServiceServerInterceptorFactoryProtocol? { get }

  @Sendable func logIn(
    request: MyTfcBb_V1_LogInRequest,
    context: GRPCAsyncServerCallContext
  ) async throws -> MyTfcBb_V1_LogInResponse

  @Sendable func getDeliveries(
    request: MyTfcBb_V1_GetDeliveriesRequest,
    context: GRPCAsyncServerCallContext
  ) async throws -> MyTfcBb_V1_GetDeliveriesResponse

  @Sendable func updatePushToken(
    request: MyTfcBb_V1_UpdatePushTokenRequest,
    context: GRPCAsyncServerCallContext
  ) async throws -> SwiftProtobuf.Google_Protobuf_Empty

  @Sendable func sendTestPushNotication(
    request: SwiftProtobuf.Google_Protobuf_Empty,
    context: GRPCAsyncServerCallContext
  ) async throws -> SwiftProtobuf.Google_Protobuf_Empty

  @Sendable func logOut(
    request: SwiftProtobuf.Google_Protobuf_Empty,
    context: GRPCAsyncServerCallContext
  ) async throws -> SwiftProtobuf.Google_Protobuf_Empty
}

@available(macOS 10.15, iOS 13, tvOS 13, watchOS 6, *)
extension MyTfcBb_V1_MyTfcServiceAsyncProvider {
  internal static var serviceDescriptor: GRPCServiceDescriptor {
    return MyTfcBb_V1_MyTfcServiceServerMetadata.serviceDescriptor
  }

  internal var serviceName: Substring {
    return MyTfcBb_V1_MyTfcServiceServerMetadata.serviceDescriptor.fullName[...]
  }

  internal var interceptors: MyTfcBb_V1_MyTfcServiceServerInterceptorFactoryProtocol? {
    return nil
  }

  internal func handle(
    method name: Substring,
    context: CallHandlerContext
  ) -> GRPCServerHandlerProtocol? {
    switch name {
    case "LogIn":
      return GRPCAsyncServerHandler(
        context: context,
        requestDeserializer: ProtobufDeserializer<MyTfcBb_V1_LogInRequest>(),
        responseSerializer: ProtobufSerializer<MyTfcBb_V1_LogInResponse>(),
        interceptors: self.interceptors?.makeLogInInterceptors() ?? [],
        wrapping: self.logIn(request:context:)
      )

    case "GetDeliveries":
      return GRPCAsyncServerHandler(
        context: context,
        requestDeserializer: ProtobufDeserializer<MyTfcBb_V1_GetDeliveriesRequest>(),
        responseSerializer: ProtobufSerializer<MyTfcBb_V1_GetDeliveriesResponse>(),
        interceptors: self.interceptors?.makeGetDeliveriesInterceptors() ?? [],
        wrapping: self.getDeliveries(request:context:)
      )

    case "UpdatePushToken":
      return GRPCAsyncServerHandler(
        context: context,
        requestDeserializer: ProtobufDeserializer<MyTfcBb_V1_UpdatePushTokenRequest>(),
        responseSerializer: ProtobufSerializer<SwiftProtobuf.Google_Protobuf_Empty>(),
        interceptors: self.interceptors?.makeUpdatePushTokenInterceptors() ?? [],
        wrapping: self.updatePushToken(request:context:)
      )

    case "SendTestPushNotication":
      return GRPCAsyncServerHandler(
        context: context,
        requestDeserializer: ProtobufDeserializer<SwiftProtobuf.Google_Protobuf_Empty>(),
        responseSerializer: ProtobufSerializer<SwiftProtobuf.Google_Protobuf_Empty>(),
        interceptors: self.interceptors?.makeSendTestPushNoticationInterceptors() ?? [],
        wrapping: self.sendTestPushNotication(request:context:)
      )

    case "LogOut":
      return GRPCAsyncServerHandler(
        context: context,
        requestDeserializer: ProtobufDeserializer<SwiftProtobuf.Google_Protobuf_Empty>(),
        responseSerializer: ProtobufSerializer<SwiftProtobuf.Google_Protobuf_Empty>(),
        interceptors: self.interceptors?.makeLogOutInterceptors() ?? [],
        wrapping: self.logOut(request:context:)
      )

    default:
      return nil
    }
  }
}

#endif // compiler(>=5.6)

internal protocol MyTfcBb_V1_MyTfcServiceServerInterceptorFactoryProtocol {

  /// - Returns: Interceptors to use when handling 'logIn'.
  ///   Defaults to calling `self.makeInterceptors()`.
  func makeLogInInterceptors() -> [ServerInterceptor<MyTfcBb_V1_LogInRequest, MyTfcBb_V1_LogInResponse>]

  /// - Returns: Interceptors to use when handling 'getDeliveries'.
  ///   Defaults to calling `self.makeInterceptors()`.
  func makeGetDeliveriesInterceptors() -> [ServerInterceptor<MyTfcBb_V1_GetDeliveriesRequest, MyTfcBb_V1_GetDeliveriesResponse>]

  /// - Returns: Interceptors to use when handling 'updatePushToken'.
  ///   Defaults to calling `self.makeInterceptors()`.
  func makeUpdatePushTokenInterceptors() -> [ServerInterceptor<MyTfcBb_V1_UpdatePushTokenRequest, SwiftProtobuf.Google_Protobuf_Empty>]

  /// - Returns: Interceptors to use when handling 'sendTestPushNotication'.
  ///   Defaults to calling `self.makeInterceptors()`.
  func makeSendTestPushNoticationInterceptors() -> [ServerInterceptor<SwiftProtobuf.Google_Protobuf_Empty, SwiftProtobuf.Google_Protobuf_Empty>]

  /// - Returns: Interceptors to use when handling 'logOut'.
  ///   Defaults to calling `self.makeInterceptors()`.
  func makeLogOutInterceptors() -> [ServerInterceptor<SwiftProtobuf.Google_Protobuf_Empty, SwiftProtobuf.Google_Protobuf_Empty>]
}

internal enum MyTfcBb_V1_MyTfcServiceServerMetadata {
  internal static let serviceDescriptor = GRPCServiceDescriptor(
    name: "MyTfcService",
    fullName: "my_tfc_bb.v1.MyTfcService",
    methods: [
      MyTfcBb_V1_MyTfcServiceServerMetadata.Methods.logIn,
      MyTfcBb_V1_MyTfcServiceServerMetadata.Methods.getDeliveries,
      MyTfcBb_V1_MyTfcServiceServerMetadata.Methods.updatePushToken,
      MyTfcBb_V1_MyTfcServiceServerMetadata.Methods.sendTestPushNotication,
      MyTfcBb_V1_MyTfcServiceServerMetadata.Methods.logOut,
    ]
  )

  internal enum Methods {
    internal static let logIn = GRPCMethodDescriptor(
      name: "LogIn",
      path: "/my_tfc_bb.v1.MyTfcService/LogIn",
      type: GRPCCallType.unary
    )

    internal static let getDeliveries = GRPCMethodDescriptor(
      name: "GetDeliveries",
      path: "/my_tfc_bb.v1.MyTfcService/GetDeliveries",
      type: GRPCCallType.unary
    )

    internal static let updatePushToken = GRPCMethodDescriptor(
      name: "UpdatePushToken",
      path: "/my_tfc_bb.v1.MyTfcService/UpdatePushToken",
      type: GRPCCallType.unary
    )

    internal static let sendTestPushNotication = GRPCMethodDescriptor(
      name: "SendTestPushNotication",
      path: "/my_tfc_bb.v1.MyTfcService/SendTestPushNotication",
      type: GRPCCallType.unary
    )

    internal static let logOut = GRPCMethodDescriptor(
      name: "LogOut",
      path: "/my_tfc_bb.v1.MyTfcService/LogOut",
      type: GRPCCallType.unary
    )
  }
}
