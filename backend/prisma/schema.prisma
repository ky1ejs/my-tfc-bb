generator client {
  provider   = "prisma-client-js"
  engineType = "binary"
}

datasource db {
  provider = "cockroachdb"
  url      = env("DATABASE_URL")
}

model Delivery {
  id            String    @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  tfc_id        Int
  name          String
  date_received DateTime  @db.Timestamptz(6)
  user_id       String    @db.Uuid
  collected_at  DateTime? @db.Timestamptz(6)
  User          User      @relation(fields: [user_id], references: [id], onDelete: Cascade)

  @@unique([tfc_id, user_id])
}

model Device {
  id                 String     @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  name               String
  device_provided_id String     @unique
  user_id            String     @db.Uuid
  User               User       @relation(fields: [user_id], references: [id], onDelete: Cascade)
  PushToken          PushToken?
}

model PushToken {
  id        String       @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  token     String
  env       TokenEnv
  platform  PushPlatform
  device_id String       @unique @db.Uuid
  Device    Device       @relation(fields: [device_id], references: [id], onDelete: Cascade)
}

model User {
  id                  String         @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  username            String         @unique
  latest_access_token String
  refresh_token       String
  hashed_password     String
  password_status     PasswordStatus @default(VALID)
  Delivery            Delivery[]
  Device              Device[]
}

enum PasswordStatus {
  VALID
  INVALID
}

enum PushPlatform {
  IOS
  ANDROID
  WEB
}

enum TokenEnv {
  STAGING
  PRODUCTION
}
